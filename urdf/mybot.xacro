<?xml version="1.0"?>
<robot name="mybot" xmlns:xacro="http://www.ros.org/wiki/xacro">

	<!-- Files to be included -->

	<xacro:include filename="$(find cart_pole)/urdf/wheels.xacro" />

	<!-- Physical properties of the robot -->

	<xacro:property name="PI" value="3.1415926535897931"/>

	<xacro:property name="chassisHeight" value="0.1"/>
	<xacro:property name="chassisLength" value="0.4"/>
	<xacro:property name="chassisWidth" value="0.2"/>
	<xacro:property name="chassisMass" value="1"/>

	<xacro:property name="rodLength" value="0.5"/>
	<xacro:property name="rodRadius" value="0.005"/>
	<xacro:property name="rodMass" value="0.1"/>
	<xacro:property name="rodAngleLimit" value="12"/>

	<xacro:property name="casterRadius" value="0.05"/>
	<xacro:property name="casterMass" value="0.1"/>

	<xacro:property name="wheelWidth" value="0.05"/>
	<xacro:property name="wheelRadius" value="0.1"/>
	<xacro:property name="wheelPos" value="0.2"/>
	<xacro:property name="wheelMass" value="0.1"/>

  <!-- Inertia description -->

	<macro name="box_inertia" params="m x y z">
	<inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
	iyy="${m*(x*x+z*z)/12}" iyz = "0"
	izz="${m*(x*x+z*z)/12}"
	/>
	</macro>

	<macro name="sphere_inertia" params="m r">
	<inertia  ixx="${2*m*r*r/5}" ixy = "0" ixz = "0"
	iyy="${2*m*r*r/5}" iyz = "0"
	izz="${2*m*r*r/5}"
	/>
	</macro>

	<macro name="cylinder_inertia" params="m r h">
		<inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
			iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
			izz="${m*r*r/2}"
		/>wheelPos
	</macro>

	<!-- Materials description -->

	<material name="black">
	  <color rgba="0.0 0.0 0.0 1.0"/>
	</material>

	<material name="blue">
	  <color rgba="0.0 0.0 0.8 1.0"/>
	</material>
wheelPos
	<material name="green">
	  <color rgba="0.0 0.8 0.0 1.0"/>
	</material>

	<material name="grey">
	  <color rgba="0.2 0.2 0.2 1.0"/>
	</material>

	<material name="orange">
	  <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
	</material>

	<material name="brown">
	  <color rgba="${222/255} ${207/255} ${195/255} 1.0"/>
	</material>

	<material name="red">
	  <color rgba="0.8 0.0 0.0 1.0"/>
	</material>

	<material name="white">
	  <color rgba="1.0 1.0 1.0 1.0"/>
	</material>
wheelPos
	<!-- Link and joint for the base_link -->

	<link name="footprint" >
		<inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
wheelPos
  <gazebo reference="footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>


	<joint name="base_joint" type="fixed">
	  <parent link="footprint"/>
	  <child link="chassis"/>
	</joint>

	<!-- Link for the base chasis -->

	<link name='chassis'>
	  <collision>
	    <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0"/>
	    <geometry>
	      <box size="${chassisLength} ${chassisWidth} ${chassisHeight}"/>
	    </geometry>
	  </collision>
	  <visual>
	    <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0"/>
	    <geometry>
	      <box size="${chassisLength} ${chassisWidth} ${chassisHeight}"/>
	    </geometry>
	    <material name="orange"/>wheelPos
	  </visual>
	  <inertial>
	    <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0"/>
	    <mass value="${chassisMass}"/>
	    <box_inertia m="${chassisMass}" x="${chassisLength}" y="${chassisWidth}" z="${chassisHeight}"/>
	  </inertial>
	</link>

	<!-- Gazebo referance for chassis -->
	<gazebo reference="chassis">
		<material>Gazebo/Orange</material>
	</gazebo>

  <!-- Attach Pendulum to top of Chassis Assembly -->
  <link name="rod_link">
    <visual>
      <geometry>
        <cylinder length="${rodLength}" radius="${rodRadius}"/>
      </geometry>
      <origin xyz="0 0 ${chassisHeight*2}"/>
      <material name="gray"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${rodLength}" radius="${rodRadius}"/>
      </geometry>
      <origin rpy="0 0 ${PI/2}" xyz="0 0 ${chassisHeight*2}"/>
    </collision>
    <inertial>
      <origin rpy="0 0 ${PI/2}" xyz="0 0 ${chassisHeight*2}"/>
      <mass value="${rodMass}"/>
      <cylinder_inertia m="${rodMass}" r="${rodRadius}" h="${rodLength}"/>
    </inertial>
  </link>
  <joint name="rod_to_chassis" type="revolute">
    <parent link="chassis"/>
    <child link="rod_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000.0" lower="${-rodAngleLimit*PI/180}" upper="${rodAngleLimit*PI/180}" velocity="0.5"/>
    <origin xyz="0 0 ${chassisHeight}"/>
  </joint>
	<!-- Gazebo referance for rod -->
	<gazebo reference="rod_link">
		<material>Gazebo/Black</material>
	</gazebo>

	<!-- Wheel description -->
	<wheel lr="left" tY="1" fY="1"/>
	<wheel lr="right" tY="-1" fY="1"/>
	<!-- Wheel description -->
	<wheel lr="left_back" tY="1" fY="-1"/>
	<wheel lr="right_back" tY="-1" fY="-1"/>

	<!-- DIFFERENTIAL DRIVE CONTROLLER -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>false</publishWheelTF>
			<legacyMode>false</legacyMode>
      <robotNamespace>/mybot</robotNamespace>
      <publishTF>1</publishTF>
      <publishWheelJointState>false</publishWheelJointState>
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftJoint>left_wheel_hinge</leftJoint>
      <rightJoint>right_wheel_hinge</rightJoint>
      <wheelSeparation>${chassisWidth}</wheelSeparation>
      <wheelDiameter>${2*wheelRadius}</wheelDiameter>
      <broadcastTF>1</broadcastTF>
      <wheelTorque>10</wheelTorque>
      <wheelAcceleration>5</wheelAcceleration>
      <commandTopic>cmd_vel</commandTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryTopic>odom</odometryTopic>
      <robotBaseFrame>footprint</robotBaseFrame>
    </plugin>
  </gazebo>

	<gazebo>
	 <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
		 <robotNamespace>/mybot</robotNamespace>
		 <jointName>rod_to_chassis</jointName>
		 <updateRate>10.0</updateRate>
		 <alwaysOn>true</alwaysOn>
	 </plugin>
</gazebo>


</robot>
